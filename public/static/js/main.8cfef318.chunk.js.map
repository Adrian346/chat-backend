{"version":3,"sources":["types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","helpers/fetch.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["types","chatReducer","state","action","type","uid","chatActivo","usuarios","mensajes","payload","de","para","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","baseUrl","process","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","usuario","nombre","register","msg","verificaToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","alt","Sidebar","filter","user","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","createdAt","OutgoingMessage","SendMessage","setMensaje","onSubmit","e","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","Swal","fire","checked","readOnly","to","disabled","RegisterPage","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","locale","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"8PAAaA,EAES,2BAFTA,EAGI,sBAHJA,EAIK,uBAJLA,EAKO,yBALPA,EAMK,yBCJLC,EAAc,SAACC,EAAOC,GAE/B,OAAQA,EAAOC,MAEX,KAAKJ,EACD,MAAO,CACHK,IAAK,GACLC,WAAY,KACZC,SAAU,GACVC,SAAU,IAGlB,KAAKR,EACD,OAAO,2BACAE,GADP,IAEIK,SAAS,YAAMJ,EAAOM,WAG9B,KAAKT,EACD,OAAGE,EAAMI,aAAeH,EAAOM,QAAgBP,EAExC,2BACAA,GADP,IAEII,WAAYH,EAAOM,QACnBD,SAAU,KAGlB,KAAKR,EACD,OAAIE,EAAMI,aAAeH,EAAOM,QAAQC,IACpCR,EAAMI,aAAeH,EAAOM,QAAQE,KAE7B,2BACAT,GADP,IAEIM,SAAS,GAAD,mBAAON,EAAMM,UAAb,CAAuBL,EAAOM,YAGnCP,EAGf,KAAKF,EACD,OAAO,2BACAE,GADP,IAEIM,SAAS,YAAML,EAAOM,WAG9B,QACI,OAAOP,I,OC7CNU,EAAcC,0BAErBC,EAAe,CACjBT,IAAK,GACLC,WAAY,KACZC,SAAU,GACVC,SAAU,IAGDO,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAE1B,EAA8BC,qBAAWhB,EAAaa,GAAtD,mBAAOI,EAAP,KAAkBC,EAAlB,KAEA,OACI,cAACP,EAAYQ,SAAb,CAAsBC,MAAO,CACzBH,YACAC,YAFJ,SAIMH,KCrBRM,EAAUC,iDAEHC,EAAa,uCAAG,WAAOC,EAAUC,GAAjB,iCAAAC,EAAA,yDAAuBC,EAAvB,+BAAgC,MAEnDC,EAFmB,UAEVP,EAFU,YAECG,GAEd,QAATG,EAJsB,iCAKFE,MAAMD,GALJ,cAKfE,EALe,gBAMRA,EAAKC,OANG,iEAQFF,MAAMD,EAAK,CAC1BD,SACAK,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUV,KAbJ,eAQfK,EARe,iBAgBRA,EAAKC,OAhBG,qFAAH,wDAsBbK,EAAa,uCAAG,WAAOZ,EAAUC,GAAjB,mCAAAC,EAAA,yDAAuBC,EAAvB,+BAAgC,MAEnDC,EAFmB,UAETP,EAFS,YAEIG,GACvBa,EAAQC,aAAaC,QAAQ,UAAY,GAE/B,QAAXZ,EALoB,iCAMFE,MAAOD,EAAK,CAC3BI,QAAS,CACL,UAAWK,KARE,cAMfP,EANe,gBAWRA,EAAKC,OAXG,iEAaFF,MAAOD,EAAK,CAC3BD,SACAK,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWV,KAnBL,eAafK,EAbe,iBAsBRA,EAAKC,OAtBG,qFAAH,wDClBbS,EAAc5B,0BAErBC,EAAe,CACjBT,IAAK,KACLqC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,MAGEC,EAAe,SAAC,GAAkB,IAAhB9B,EAAe,EAAfA,SAE3B,EAAwB+B,mBAASjC,GAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KACQ9B,EAAa+B,qBAAWtC,GAAxBO,SAEFgC,EAAK,uCAAG,WAAMN,EAAOO,GAAb,iBAAAzB,EAAA,sEACSH,EAAc,QAAS,CAAEqB,QAAOO,YAAY,QADrD,cACJrB,EADI,QAGFsB,KACJd,aAAae,QAAQ,QAASvB,EAAKO,OAC3BiB,EAAYxB,EAAZwB,QACRN,EAAQ,CACJ5C,IAAKkD,EAAQlD,IACbqC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,SAXb,kBAgBHd,EAAKsB,IAhBF,2CAAH,wDAmBLI,EAAQ,uCAAG,WAAMD,EAAQX,EAAOO,GAArB,iBAAAzB,EAAA,sEACMH,EAAc,YAAa,CAAEgC,SAAQX,QAAOO,YAAY,QAD9D,YACPrB,EADO,QAGLsB,GAHK,uBAITd,aAAae,QAAQ,QAASvB,EAAKO,OAC3BiB,EAAYxB,EAAZwB,QACRN,EAAQ,CACJ5C,IAAKkD,EAAQlD,IACbqC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,QAXV,mBAcF,GAdE,gCAiBNd,EAAK2B,KAjBC,2CAAH,0DAoBRC,EAAgBC,sBAAW,sBAAE,8BAAAjC,EAAA,yDAEjBY,aAAaC,QAAQ,SAFJ,uBAK3BS,EAAQ,CACJ5C,IAAK,KACLqC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,OAVgB,mBAapB,GAboB,uBAeZR,EAAc,eAfF,YAezBN,EAfyB,QAgBrBsB,GAhBqB,wBAiB3Bd,aAAae,QAAQ,QAASvB,EAAKO,OAC3BiB,EAAYxB,EAAZwB,QAERN,EAAQ,CACJ5C,IAAKkD,EAAQlD,IACbqC,UAAU,EACVC,QAAQ,EACRC,KAAMW,EAAQC,OACdX,MAAOU,EAAQV,QAzBQ,mBA4BpB,GA5BoB,eA8B3BI,EAAQ,CACJ5C,IAAK,KACLqC,UAAU,EACVC,QAAQ,EACRC,KAAM,KACNC,MAAO,OAnCgB,mBAsCpB,GAtCoB,4CAyChC,IAeH,OACI,cAACJ,EAAYrB,SAAb,CAAsBC,MAAO,CACzB2B,OACAG,QACAM,WACAE,gBACAE,OAnBO,WACXtB,aAAauB,WAAW,SAExB3C,EAAS,CACLf,KAAMJ,IAGViD,EAAQ,CACJP,UAAU,EACVC,QAAQ,MAKZ,SAOM3B,K,yBClHD+C,EAAgBlD,0BAEhBmD,EAAiB,SAAC,GAAkB,IAAhBhD,EAAe,EAAfA,SAE7B,ECVqB,SAAEiD,GAEvB,MAA4BlB,mBAAS,MAArC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAA8BpB,oBAAS,GAAvC,mBAAQqB,EAAR,KAAgBC,EAAhB,KAEMC,EAAiBV,uBAAa,WAEhC,IAAMtB,EAAQC,aAAaC,QAAQ,SAE7B+B,EAAaC,IAAGC,QAASR,EAAY,CACvCS,WAAY,CAAC,aACbC,aAAa,EACbC,UAAU,EACVC,MAAO,CACH,UAAWvC,KAInB6B,EAAUI,KAEX,CAACN,IAEEa,EAAoBlB,uBAAa,WAC7B,OAANM,QAAM,IAANA,KAAQa,eACT,CAACb,IAcJ,OAZAc,qBAAU,WACNX,EAAS,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAQe,aACpB,CAACf,IAEJc,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,WAAW,kBAAMb,GAAW,QACxC,CAAEH,IAELc,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,cAAc,kBAAMb,GAAW,QAC3C,CAAEH,IAEE,CACHA,SACAE,SACAE,iBACAQ,qBDhC0DK,CAAU,+CAAhEjB,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQE,EAAxB,EAAwBA,eAAgBQ,EAAxC,EAAwCA,kBAChC9B,EAASE,qBAAWT,GAApBO,KACA7B,EAAa+B,qBAAWtC,GAAxBO,SAoCR,OAlCA6D,qBAAU,WACFhC,EAAKL,QACL2B,MAEL,CAACtB,EAAMsB,IAEVU,qBAAU,WACDhC,EAAKL,QACNmC,MAEL,CAAC9B,EAAM8B,IAGVE,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,kBAAkB,SAAC3E,GAC1BY,EAAS,CACLf,KAAMJ,EACNS,QAASF,SAGlB,CAAC2D,EAAQ/C,IAEZ6D,qBAAU,WACA,OAANd,QAAM,IAANA,KAAQgB,GAAG,oBAAoB,SAACE,GE9BF,IAAEC,EF+B5BlE,EAAS,CACLf,KAAMJ,EACNS,QAAS2E,IEjCeC,EFoCL,WElC/BC,gBAAcC,eAAe,CACzBC,YAAaH,EACbI,SAAU,WFmCX,CAAEvB,EAAQ/C,IAGT,cAAC4C,EAAc3C,SAAf,CAAwBC,MAAO,CAAE6C,SAAQE,UAAzC,SACMpD,K,eGpDD0E,EAAa,WACtB,OACI,qBAAKC,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACA,wDACA,2ECLHC,EAAY,WAErB,MAAyB1C,qBAAWT,GAA5BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,OAEd,OACI,sBAAK8B,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,6BAAM3C,EAAKJ,SAEf,qBAAK+C,UAAU,WAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,wBACIA,UAAU,kBACVE,QAAUhC,EAFd,2BCRPiC,EAAkB,SAAC,GAAiB,IAAfvC,EAAc,EAAdA,QAE9B,EAAgCL,qBAAWtC,GAAnCO,EAAR,EAAQA,SACAb,EADR,EAAkBY,UACVZ,WAGFuF,EAAO,uCAAG,4BAAAlE,EAAA,6DACZR,EAAS,CACLf,KAAMJ,EACNS,QAAS8C,EAAQlD,MAHT,SAMOgC,EAAc,YAAD,OAAckB,EAAQlD,MAN1C,OAMN0B,EANM,OAOZZ,EAAS,CACLf,KAAMJ,EACNS,QAASsB,EAAKvB,WHnBM6E,EGsBT,WHpBnBC,gBAAcC,eAAe,CACzBC,YAAaH,EACbI,SAAU,IGME,iCHVU,IAAEJ,IGUZ,OAAH,qDAeb,OACI,qBACIM,UAAS,oBAAiBpC,EAAQlD,MAAQC,GAAe,eACzDuF,QAAUA,EAFd,SAII,sBAAKF,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKI,IAAI,mDAAmDC,IAAI,YAEpE,sBAAKL,UAAU,UAAf,UACI,6BAAMpC,EAAQC,SAETD,EAAQa,OACH,sBAAMuB,UAAU,eAAhB,oBACA,sBAAMA,UAAU,cAAhB,8BCjCjBM,EAAU,WAEnB,IAAQ/E,EAAcgC,qBAAWtC,GAAzBM,UAGAb,EAFS6C,qBAAWT,GAApBO,KAEA3C,IAER,OACI,sBAAKsF,UAAU,aAAf,UAGQzE,EAAUX,SACL2F,QAAQ,SAAAC,GAAI,OAAIA,EAAK9F,MAAQA,KAC7B+F,KAAK,SAAC7C,GAAD,OACF,cAAC,EAAD,CAEIA,QAAUA,GADJA,EAAQlD,QAS9B,qBAAKsF,UAAU,oBC5BdU,EAAc,WACvB,OACI,sBAAKV,UAAU,eAAf,UAEI,cAAC,EAAD,IAEA,cAAC,EAAD,Q,iBCRCW,EAAU,SAAEC,GAIrB,OAFeC,IAAOD,GAERE,OAAO,sBCHZC,EAAkB,SAAC,GAAa,IAAXhD,EAAU,EAAVA,IAE9B,OACI,sBAAKiC,UAAU,eAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKI,IAAI,mDAAmDC,IAAI,YAEpE,qBAAKL,UAAU,eAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,4BAAKjC,EAAI0B,UACT,uBAAMO,UAAU,YAAhB,cAA+BW,EAAQ5C,EAAIiD,uBCVlDC,EAAkB,SAAC,GAAa,IAAXlD,EAAU,EAAVA,IAC9B,OACI,qBAAKiC,UAAU,eAAf,SACI,sBAAKA,UAAU,WAAf,UACI,4BAAKjC,EAAI0B,UACT,uBAAMO,UAAU,YAAhB,cAA+BW,EAAQ5C,EAAIiD,oBCF9CE,EAAc,WAEvB,MAA8B9D,mBAAS,IAAvC,mBAAOqC,EAAP,KAAgB0B,EAAhB,KAEQ5C,EAAWhB,qBAAWa,GAAtBG,OACAlB,EAASE,qBAAWT,GAApBO,KACA9B,EAAcgC,qBAAWtC,GAAzBM,UAmBR,OACI,sBAAM6F,SAdO,SAACC,GACdA,EAAEC,iBAEkB,IAAjB7B,EAAQ8B,SACXJ,EAAW,IAEX5C,EAAOiD,KAAM,mBAAoB,CAC7BzG,GAAIsC,EAAK3C,IACTM,KAAMO,EAAUZ,WAChB8E,cAKJ,SACI,sBAAKO,UAAU,eAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,uBACIvF,KAAK,OACLuF,UAAU,YACVyB,YAAY,aACZ/F,MAAQ+D,EACRiC,SA1BH,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBR,EAAWQ,EAAOjG,YA4BV,qBAAKsE,UAAU,uBAAf,SACI,wBAAQA,UAAU,oBAAoBvF,KAAK,SAA3C,4BCrCPmH,EAAW,WAEpB,IAAQrG,EAAcgC,qBAAWtC,GAAzBM,UACA8B,EAASE,qBAAWT,GAApBO,KAER,OACI,sBAAK2C,UAAU,QAAf,UACI,qBACIN,GAAG,WACHM,UAAU,cAFd,SAMQzE,EAAUV,SAAS4F,KAAK,SAAA1C,GAAG,OACrBA,EAAI/C,OAASqC,EAAK3C,IACd,cAAC,EAAD,CAAiCqD,IAAMA,GAAhBA,EAAI8D,KAC3B,cAAC,EAAD,CAAiC9D,IAAMA,GAAhBA,EAAI8D,UAM7C,cAAC,EAAD,QCrBCC,G,OAAW,WAEpB,IAAQvG,EAAcgC,qBAAWtC,GAAzBM,UAER,OACI,qBAAKyE,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UAEI,cAAC,EAAD,IAGKzE,EAAUZ,WACL,cAAC,EAAD,IACA,cAAC,EAAD,W,yBCfboH,EAAY,WAExB,IAAQvE,EAAUD,qBAAWT,GAArBU,MAER,EAAwBJ,mBAAS,CAChCF,MAAO,iBACPO,SAAU,SACVuE,YAAY,IAHb,mBAAOC,EAAP,KAAaC,EAAb,KAMA7C,qBAAU,WAET,IAAMnC,EAAQN,aAAaC,QAAQ,SAC/BK,GACHgF,GAAS,SAACD,GAAD,mBAAC,eACNA,GADK,IAER/E,QACA8E,YAAY,SAIZ,IAEH,IAAMN,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACX1E,EAAgB0E,EAAhB1E,KAAMvB,EAAUiG,EAAVjG,MAEdwG,EAAQ,2BACJD,GADG,kBAELhF,EAAOvB,MAWJ0F,EAAQ,uCAAG,WAAMC,GAAN,iBAAArF,EAAA,6DAChBqF,EAAEC,iBAECW,EAAKD,WACPpF,aAAae,QAAQ,QAASsE,EAAK/E,OAEnCN,aAAauB,WAAW,SAEjBjB,EAAoB+E,EAApB/E,MAAOO,EAAawE,EAAbxE,SARC,SASCD,EAAMN,EAAOO,GATd,eAYf0E,IAAKC,KAAK,QAAS,uCAAqC,SAZzC,2CAAH,sDAoBX,OACI,uBACLpC,UAAU,6CACVoB,SAAWA,EAFN,UAIL,sBAAMpB,UAAU,2BAAhB,4BAIA,sBAAKA,UAAU,oCAAf,UACI,uBACFA,UAAU,WACVvF,KAAK,QACLwC,KAAK,QACLwE,YAAY,QACZ/F,MAAQuG,EAAK/E,MACbwE,SAAWA,IAEZ,sBAAM1B,UAAU,sBAIjB,sBAAKA,UAAU,oCAAf,UACI,uBACFA,UAAU,WACVvF,KAAK,WACLwC,KAAK,WACLwE,YAAY,WACZ/F,MAAQuG,EAAKxE,SACbiE,SAAWA,IAEZ,sBAAM1B,UAAU,sBAGjB,sBAAKA,UAAU,WAAf,UACI,sBACFA,UAAU,MACVE,QAAU,WA/DbgC,EAAQ,2BACJD,GADG,IAEND,YAAaC,EAAKD,eA2Dd,UAIC,uBACFhC,UAAU,oBACVN,GAAG,OACHjF,KAAK,WACLwC,KAAK,aACLoF,QAAUJ,EAAKD,WACfM,UAAQ,IAET,uBAAOtC,UAAU,oBAAjB,2BAKD,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMuC,GAAG,iBAAiBvC,UAAU,OAApC,gCAMI,qBAAKA,UAAU,qCAAf,SACL,wBACFvF,KAAK,SACLuF,UAAU,oBACVwC,WAlEKP,EAAK/E,MAAMqE,OAAS,GAAKU,EAAKxE,SAAS,GA+D1C,4BCvHMgF,EAAe,WAE3B,IAAQ3E,EAAaP,qBAAWT,GAAxBgB,SAER,EAAwBV,mBAAS,CAChCH,KAAM,qBACNC,MAAO,iBACPO,SAAU,WAHX,mBAAOwE,EAAP,KAAaC,EAAb,KAMMR,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACX1E,EAAgB0E,EAAhB1E,KAAMvB,EAAUiG,EAAVjG,MAEdwG,EAAQ,2BACJD,GADG,kBAELhF,EAAOvB,MAIJ0F,EAAQ,uCAAG,WAAMC,GAAN,qBAAArF,EAAA,6DAChBqF,EAAEC,iBAEMrE,EAA0BgF,EAA1BhF,KAAMC,EAAoB+E,EAApB/E,MAAOO,EAAawE,EAAbxE,SAHL,SAIEK,EAASb,EAAMC,EAAOO,GAJxB,QAMJ,KAFNM,EAJU,SAOfoE,IAAKC,KAAK,QAASrE,EAAK,SAPT,2CAAH,sDAeX,OACI,uBACLiC,UAAU,6CACVoB,SAAWA,EAFN,UAII,sBAAMpB,UAAU,2BAAhB,6BAIT,sBAAKA,UAAU,oCAAf,UACI,uBACFA,UAAU,WACVvF,KAAK,OACLwC,KAAK,OACLwE,YAAY,SACZ/F,MAAQuG,EAAKhF,KACbyE,SAAWA,IAEZ,sBAAM1B,UAAU,sBAIjB,sBAAKA,UAAU,oCAAf,UACI,uBACFA,UAAU,WACVvF,KAAK,QACLwC,KAAK,QACLwE,YAAY,QACZ/F,MAAQuG,EAAK/E,MACbwE,SAAWA,IAEZ,sBAAM1B,UAAU,sBAIjB,sBAAKA,UAAU,oCAAf,UACI,uBACFA,UAAU,WACVvF,KAAK,WACLwC,KAAK,WACLwE,YAAY,WACZ/F,MAAQuG,EAAKxE,SACbiE,SAAWA,IAEZ,sBAAM1B,UAAU,sBAGjB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,iBAAf,SACC,cAAC,IAAD,CAAMuC,GAAG,cAAcvC,UAAU,OAAjC,mCAML,qBAAKA,UAAU,qCAAf,SACI,wBACFvF,KAAK,SACLuF,UAAU,oBACVwC,WA9DMP,EAAKhF,KAAKsE,OAAS,GAAKU,EAAK/E,MAAMqE,OAAS,GAAKU,EAAKxE,SAAS,GA2DnE,gCCzFMiF,G,OAAa,WACtB,OACI,qBAAK1C,UAAU,UAAf,SACF,qBAAKA,UAAU,qBAAf,SACC,qBAAKA,UAAU,8BAAf,SACa,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,cAAcC,UAAYd,IAC5C,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,iBAAiBC,UAAYJ,IAE/C,cAAC,IAAD,CAAUF,GAAG,2B,SCbxBO,GAAc,SAAC,GAIrB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACQJ,UAAY,SAACK,GAAD,OACNH,EAEI,cAAC,IAAD,CAAUR,GAAG,MADb,cAACS,EAAD,eAAeE,SCT5BC,GAAe,SAAC,GAItB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACQJ,UAAY,SAACK,GAAD,OACPH,EACK,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUX,GAAG,eCA1Ba,GAAY,WAErB,MAAgC7F,qBAAWT,GAAnCO,EAAR,EAAQA,KAAMW,EAAd,EAAcA,cAMd,OAJAqB,qBAAU,WACNrB,MACD,CAACA,IAEAX,EAAKN,SACE,qDAIP,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAagG,gBAAkB1F,EAAKL,OAAS4F,KAAK,QAAQC,UAAYH,IACtE,cAAC,GAAD,CAAcK,gBAAkB1F,EAAKL,OAAS2F,OAAK,EAACC,KAAK,IAAIC,UAAYf,IAEzE,cAAC,IAAD,CAAUS,GAAG,c,OCxBjC1B,IAAOwC,OAAO,MAEP,IAAMC,GAAU,WACnB,OACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,GAAD,W,OCVpBC,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8cfef318.chunk.js","sourcesContent":["export const types = {\r\n\r\n    usuariosCargados: '[Chat] Usuarios cargados',\r\n    activarChat: '[Chat] Activar Chat',\r\n    nuevoMensaje: '[Chat] Nuevo Mensaje',\r\n    cargarMensajes: '[Chat] Cargar Mensajes',\r\n    cerrarSesion: '[Chat] Cerra Sesión',\r\n}","import { types } from \"../../types/types\"\r\n\r\nexport const chatReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.cerrarSesion:\r\n            return {\r\n                uid: '',\r\n                chatActivo: null,\r\n                usuarios: [],\r\n                mensajes: []\r\n            }\r\n        \r\n        case types.usuariosCargados:\r\n            return {\r\n                ...state,\r\n                usuarios: [ ...action.payload ]\r\n            }\r\n\r\n        case types.activarChat:\r\n            if(state.chatActivo === action.payload) return state\r\n            \r\n            return {\r\n                ...state,\r\n                chatActivo: action.payload,\r\n                mensajes: []\r\n            }\r\n        \r\n        case types.nuevoMensaje:\r\n            if( state.chatActivo === action.payload.de ||\r\n                state.chatActivo === action.payload.para \r\n            ){\r\n                return {\r\n                    ...state,\r\n                    mensajes: [ ...state.mensajes, action.payload ]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n\r\n        case types.cargarMensajes:\r\n            return {\r\n                ...state,\r\n                mensajes: [ ...action.payload ]\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport { chatReducer } from './chatReducer'\r\n\r\nexport const ChatContext = createContext()\r\n\r\nconst initialState = {\r\n    uid: '',\r\n    chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\r\n    usuarios: [], // Todos los usuarios de la base de datos\r\n    mensajes: [], // El chat seleccionado\r\n}\r\n\r\nexport const ChatProvider = ({children}) => {\r\n\r\n    const [chatState, dispatch] = useReducer(chatReducer, initialState)\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            chatState,\r\n            dispatch\r\n        }}>\r\n            { children }\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchSinToken = async( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if(method==='GET'){\r\n        const resp = await fetch(url)\r\n        return await resp.json()\r\n    } else {\r\n        const resp = await fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        return await resp.json()\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchConToken = async( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        const resp = await fetch( url, {\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n        return await resp.json();\r\n    } else {\r\n        const resp = await fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n\r\n        return await resp.json();\r\n    }\r\n\r\n}","import React, { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    checking: true,\r\n    logged: false,\r\n    name: null,\r\n    email: null,\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    const [auth, setAuth] = useState(initialState)\r\n    const { dispatch } = useContext(ChatContext)\r\n\r\n    const login = async(email, password) => {\r\n        const resp = await fetchSinToken('login', { email, password }, 'POST')\r\n\r\n        if(resp.ok){\r\n            localStorage.setItem('token', resp.token)\r\n            const { usuario } = resp \r\n            setAuth({\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: usuario.nombre,\r\n                email: usuario.email,\r\n            })\r\n            \r\n        }\r\n\r\n        return resp.ok\r\n    }\r\n\r\n    const register = async(nombre, email, password) => {\r\n        const resp = await fetchSinToken('login/new', { nombre, email, password }, 'POST')\r\n\r\n        if(resp.ok){\r\n            localStorage.setItem('token', resp.token)\r\n            const { usuario } = resp \r\n            setAuth({\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: usuario.nombre,\r\n                email: usuario.email,\r\n            })\r\n\r\n            return true\r\n        }\r\n\r\n        return resp.msg\r\n    }\r\n\r\n    const verificaToken = useCallback( async() => {\r\n\r\n        const token = localStorage.getItem('token');\r\n        // Si token no existe\r\n        if ( !token ) {\r\n            setAuth({\r\n                uid: null,\r\n                checking: false,\r\n                logged: false,\r\n                name: null,\r\n                email: null,\r\n            })\r\n\r\n            return false;\r\n        }\r\n        const resp = await fetchConToken('login/renew');\r\n        if ( resp.ok ) {\r\n            localStorage.setItem('token', resp.token );\r\n            const { usuario } = resp;\r\n\r\n            setAuth({\r\n                uid: usuario.uid,\r\n                checking: false,\r\n                logged: true,\r\n                name: usuario.nombre,\r\n                email: usuario.email,\r\n            });\r\n\r\n            return true;\r\n        } else {\r\n            setAuth({\r\n                uid: null,\r\n                checking: false,\r\n                logged: false,\r\n                name: null,\r\n                email: null,\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token')\r\n\r\n        dispatch({\r\n            type: types.cerrarSesion\r\n        })\r\n\r\n        setAuth({\r\n            checking: false,\r\n            logged: false\r\n        });\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth,\r\n            login,\r\n            register,\r\n            verificaToken,\r\n            logout,\r\n        }}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { ChatContext } from './chat/ChatContext';\r\nimport { useSocket } from '../hooks/useSocket'\r\n\r\nimport { types } from '../types/types';\r\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { socket, online, conectarSocket, desconectarSocket } = useSocket('https://chat-react-socket-io.herokuapp.com/');\r\n    const { auth } = useContext(AuthContext)\r\n    const { dispatch } = useContext(ChatContext)\r\n\r\n    useEffect(() => {\r\n        if( auth.logged ){\r\n            conectarSocket()\r\n        }\r\n    }, [auth, conectarSocket])\r\n    \r\n    useEffect(() => {\r\n        if( !auth.logged ){\r\n            desconectarSocket()\r\n        }\r\n    }, [auth, desconectarSocket])\r\n\r\n    // Esuchar los cambios en los usuarios conectados\r\n    useEffect(() => {\r\n        socket?.on('lista-usuarios', (usuarios) => {\r\n            dispatch({\r\n                type: types.usuariosCargados,\r\n                payload: usuarios\r\n            })\r\n        })\r\n    }, [socket, dispatch])\r\n\r\n    useEffect(() => {\r\n        socket?.on('mensaje-personal', (mensaje) => {\r\n            dispatch({\r\n                type: types.nuevoMensaje,\r\n                payload: mensaje\r\n            })\r\n            \r\n            scrollToBottomAnimated('mensajes')\r\n        })\r\n\r\n    }, [ socket, dispatch ]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket, online }}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport const useSocket = ( serverPath ) => {\r\n    \r\n    const [socket, setSocket] = useState(null)\r\n    const [ online, setOnline ] = useState(false);\r\n\r\n    const conectarSocket = useCallback( () => {\r\n\r\n        const token = localStorage.getItem('token')\r\n\r\n        const socketTemp = io.connect( serverPath, {\r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n            query: {\r\n                'x-token': token\r\n            }\r\n        })\r\n\r\n        setSocket(socketTemp)\r\n\r\n    }, [serverPath])\r\n\r\n    const desconectarSocket = useCallback( () => {\r\n        socket?.disconnect()\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        setOnline( socket?.connected );\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket?.on('connect', () => setOnline( true ));\r\n    }, [ socket ])\r\n\r\n    useEffect(() => {\r\n        socket?.on('disconnect', () => setOnline( false ));\r\n    }, [ socket ])\r\n\r\n    return {\r\n        socket,\r\n        online,\r\n        conectarSocket,\r\n        desconectarSocket\r\n    }\r\n}","import { animateScroll } from \"react-scroll\"\r\n\r\nexport const scrollToBottom = ( id ) => {\r\n\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 0\r\n    })\r\n\r\n}\r\n\r\nexport const scrollToBottomAnimated = ( id ) => {\r\n\r\n    animateScroll.scrollToBottom({\r\n        containerId: id,\r\n        duration: 250\r\n    })\r\n\r\n}","import React from 'react'\r\n\r\nexport const ChatSelect = () => {\r\n    return (\r\n        <div className=\"middle-screen\">\r\n            <div className=\"alert-info\">\r\n                <hr/>\r\n                <h3>Seleccione una persona</h3>\r\n                <span>\r\n                    Para comenzar una conversación\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nexport const Searchbox = () => {\r\n\r\n    const { auth, logout } = useContext(AuthContext)\r\n\r\n    return (\r\n        <div className=\"headind_srch\">\r\n            <div className=\"recent_heading mt-2\">\r\n                <h4>{ auth.name }</h4>\r\n            </div>\r\n            <div className=\"srch_bar\">\r\n                <div className=\"stylish-input-group\">\r\n                    <button \r\n                        className=\"btn text-danger\"\r\n                        onClick={ logout }\r\n                    >\r\n                        Salir\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\nimport { fetchConToken } from '../helpers/fetch'\r\nimport { scrollToBottom } from '../helpers/scrollToBottom'\r\nimport { types } from '../types/types'\r\n\r\nexport const SidebarChatItem = ({ usuario }) => {\r\n\r\n    const { dispatch, chatState } = useContext(ChatContext)\r\n    const { chatActivo } = chatState\r\n\r\n\r\n    const onClick = async() => {\r\n        dispatch({\r\n            type: types.activarChat,\r\n            payload: usuario.uid\r\n        })\r\n        // Cargar los mensajes del chat\r\n        const resp = await fetchConToken(`mensajes/${ usuario.uid }`)\r\n        dispatch({\r\n            type: types.cargarMensajes,\r\n            payload: resp.mensajes\r\n        })\r\n        \r\n        scrollToBottom('mensajes')\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={`chat_list ${ (usuario.uid === chatActivo) && 'active_chat' }`}\r\n            onClick={ onClick }\r\n        >\r\n            <div className=\"chat_people\">\r\n                <div className=\"chat_img\"> \r\n                    <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\r\n                </div>\r\n                <div className=\"chat_ib\">\r\n                    <h5>{ usuario.nombre }</h5>\r\n                    {\r\n                        (usuario.online)\r\n                            ? <span className=\"text-success\">Online</span>\r\n                            : <span className=\"text-danger\">Offline</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\n\r\nimport { SidebarChatItem } from './SidebarChatItem'\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const { chatState } = useContext(ChatContext)\r\n    const { auth } = useContext(AuthContext)\r\n\r\n    const { uid } = auth \r\n\r\n    return (\r\n        <div className=\"inbox_chat\">\r\n\r\n            {\r\n                chatState.usuarios\r\n                    .filter( user => user.uid !== uid )\r\n                    .map( (usuario) => (\r\n                        <SidebarChatItem \r\n                            key={ usuario.uid }\r\n                            usuario={ usuario }\r\n                        />\r\n                    ))\r\n            }\r\n\r\n\r\n\r\n                {/* <!-- Espacio extra para scroll --> */}\r\n            <div className=\"extra_space\"></div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Searchbox } from './Searchbox'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const InboxPeople = () => {\r\n    return (\r\n        <div className=\"inbox_people\">\r\n\r\n            <Searchbox/>\r\n\r\n            <Sidebar/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const horaMes = ( fecha ) => {\r\n\r\n    const hoyMes = moment(fecha)\r\n\r\n    return hoyMes.format('HH:mm a | MMMM Do')\r\n\r\n}\r\n","import React from 'react'\r\nimport { horaMes } from '../helpers/horaMes'\r\n\r\nexport const IncomingMessage = ({ msg }) => {\r\n\r\n    return (\r\n        <div className=\"incoming_msg\">\r\n            <div className=\"incoming_msg_img\">\r\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\r\n            </div>\r\n            <div className=\"received_msg\">\r\n                <div className=\"received_withd_msg\">\r\n                    <p>{ msg.mensaje }</p>\r\n                    <span className=\"time_date\"> { horaMes(msg.createdAt) }</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { horaMes } from '../helpers/horaMes'\r\n\r\nexport const OutgoingMessage = ({ msg }) => {\r\n    return (\r\n        <div className=\"outgoing_msg\">\r\n            <div className=\"sent_msg\">\r\n                <p>{ msg.mensaje }</p>\r\n                <span className=\"time_date\"> { horaMes(msg.createdAt) }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { SocketContext } from '../context/SocketContext'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\n\r\nexport const SendMessage = () => {\r\n\r\n    const [mensaje, setMensaje] = useState('')\r\n\r\n    const { socket } = useContext(SocketContext)\r\n    const { auth } = useContext(AuthContext)\r\n    const { chatState } = useContext(ChatContext)\r\n\r\n    const onChange = ({ target }) => {\r\n        setMensaje(target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(mensaje.length===0){ return; }\r\n        setMensaje('');\r\n\r\n        socket.emit( 'mensaje-personal', {\r\n            de: auth.uid,\r\n            para: chatState.chatActivo,\r\n            mensaje\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ onSubmit }>\r\n            <div className=\"type_msg row\">\r\n                <div className=\"input_msg_write col-sm-9\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"write_msg\"\r\n                        placeholder=\"Mensaje...\" \r\n                        value={ mensaje }\r\n                        onChange={ onChange }\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-3 text-center\">\r\n                    <button className=\"msg_send_btn mt-3\" type=\"submit\">\r\n                        enviar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\nimport { IncomingMessage } from './IncomingMessage'\r\nimport { OutgoingMessage } from './OutgoingMessage'\r\nimport { SendMessage } from './SendMessage'\r\n\r\nexport const Messages = () => {\r\n\r\n    const { chatState } = useContext(ChatContext)\r\n    const { auth } = useContext(AuthContext)\r\n\r\n    return (\r\n        <div className=\"mesgs\">\r\n            <div \r\n                id=\"mensajes\"\r\n                className=\"msg_history\"\r\n            >\r\n\r\n                {\r\n                    chatState.mensajes.map( msg => (\r\n                        ( msg.para === auth.uid )\r\n                            ? <IncomingMessage key={ msg._id } msg={ msg }/>\r\n                            : <OutgoingMessage key={ msg._id } msg={ msg }/>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n            <SendMessage/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ChatSelect } from '../components/ChatSelect'\r\nimport { InboxPeople } from '../components/InboxPeople'\r\nimport { Messages } from '../components/Messages'\r\nimport { ChatContext } from '../context/chat/ChatContext'\r\n\r\nimport '../css/chat.css'\r\n\r\nexport const ChatPage = () => {\r\n\r\n    const { chatState } = useContext(ChatContext)\r\n\r\n    return (\r\n        <div className=\"messaging\">\r\n            <div className=\"inbox_msg\">\r\n\r\n                <InboxPeople/>\r\n\r\n                {\r\n                    (chatState.chatActivo)\r\n                        ? <Messages/>\r\n                        : <ChatSelect/>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nexport const LoginPage = () => {\r\n\r\n\tconst { login } = useContext(AuthContext)\r\n\r\n\tconst [form, setForm] = useState({\r\n\t\temail: 'test1@test.com',\r\n\t\tpassword: '123456',\r\n\t\trememberme: true\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst email = localStorage.getItem('email')\r\n\t\tif( email ) {\r\n\t\t\tsetForm( (form)=> ({\r\n\t\t\t\t...form,\r\n\t\t\t\temail,\r\n\t\t\t\trememberme: true,\r\n\t\t\t}))\r\n\t\t}\r\n\t\t\r\n\t}, [])\r\n\r\n\tconst onChange = ({ target }) => {\r\n\t\tconst { name, value } = target\r\n\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: value\r\n\t\t})\r\n\t}\r\n\r\n\tconst toggleCheck = () => {\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\trememberme: !form.rememberme\r\n\t\t})\r\n\t}\r\n\r\n\tconst onSubmit = async(e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(form.rememberme){\r\n\t\t\tlocalStorage.setItem('email', form.email)\r\n\t\t} else {\r\n\t\t\tlocalStorage.removeItem('email')\r\n\t\t}\r\n\t\tconst { email, password } = form\r\n\t\tconst ok = await login(email, password)\r\n\t\t\r\n\t\tif(!ok) {\r\n\t\t\tSwal.fire('Error', 'Verifique el usuario y contraseña', 'error')\r\n\t\t}\r\n\t}\r\n\r\n\tconst todoOk = () => {\r\n\t\treturn (form.email.length > 0 && form.password>0 ) ? true : false;\r\n\t}\r\n\r\n    return (\r\n        <form \r\n\t\t\tclassName=\"login100-form validate-form flex-sb flex-w\"\r\n\t\t\tonSubmit={ onSubmit }\r\n\t\t>\r\n\t\t\t<span className=\"login100-form-title mb-3\">\r\n\t\t\t    Chat - Ingreso\r\n\t\t\t</span>\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\r\n\t\t\t    <input \r\n\t\t\t\t\tclassName=\"input100\" \r\n\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tplaceholder=\"Email\" \r\n\t\t\t\t\tvalue={ form.email }\r\n\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\r\n\t\t\t    <input \r\n\t\t\t\t\tclassName=\"input100\" \r\n\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tplaceholder=\"Password\" \r\n\t\t\t\t\tvalue={ form.password }\r\n\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"row mb-3\">\r\n\t\t\t    <div \r\n\t\t\t\t\tclassName=\"col\"\r\n\t\t\t\t\tonClick={ () => toggleCheck() }\r\n\t\t\t\t>\r\n\t\t\t\t    <input \r\n\t\t\t\t\t\tclassName=\"input-checkbox100\" \r\n\t\t\t\t\t\tid=\"ckb1\" \r\n\t\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\t\tname=\"rememberme\" \r\n\t\t\t\t\t\tchecked={ form.rememberme }\r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"label-checkbox100\">\r\n\t\t\t\t\t    Recordarme\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col text-right\">\r\n\t\t\t\t    <Link to=\"/auth/register\" className=\"txt1\">\r\n\t\t\t\t\t    Nueva cuenta?\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n            <div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t    <button\r\n\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\tclassName=\"login100-form-btn\"\r\n\t\t\t\t\tdisabled={ !todoOk() }\r\n\t\t\t\t>\r\n\t\t\t\t    Ingresar\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { AuthContext } from '../auth/AuthContext'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n\tconst { register } = useContext(AuthContext)\r\n\r\n\tconst [form, setForm] = useState({\r\n\t\tname: 'Adrián López',\r\n\t\temail: 'test5@test.com',\r\n\t\tpassword: '123456',\r\n\t})\r\n\r\n\tconst onChange = ({ target }) => {\r\n\t\tconst { name, value } = target\r\n\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: value\r\n\t\t})\r\n\t}\r\n\r\n\tconst onSubmit = async(e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, password } = form\r\n\t\tconst msg = await register(name, email, password)\r\n\t\t\r\n\t\tif( msg !== true ) {\r\n\t\t\tSwal.fire('Error', msg, 'error')\r\n\t\t}\r\n\t}\r\n\r\n\tconst todoOk = () => {\r\n\t\treturn ( form.name.length > 0 && form.email.length > 0 && form.password>0 ) ? true : false;\r\n\t}\r\n\r\n    return (\r\n        <form \r\n\t\t\tclassName=\"login100-form validate-form flex-sb flex-w\"\r\n\t\t\tonSubmit={ onSubmit }\r\n\t\t>\r\n            <span className=\"login100-form-title mb-3\">\r\n                Chat - Registro\r\n\t\t\t</span>\r\n\r\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\r\n\t\t\t    <input \r\n\t\t\t\t\tclassName=\"input100\" \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tname=\"name\" \r\n\t\t\t\t\tplaceholder=\"Nombre\"\r\n\t\t\t\t\tvalue={ form.name }\r\n\t\t\t\t\tonChange={ onChange } \r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\r\n\t\t\t    <input \r\n\t\t\t\t\tclassName=\"input100\" \r\n\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\tvalue={ form.email }\r\n\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\r\n\t\t\t    <input \r\n\t\t\t\t\tclassName=\"input100\" \r\n\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tvalue={ form.password }\r\n\t\t\t\t\tonChange={ onChange } \r\n\t\t\t\t/>\r\n\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t<div className=\"row mb-3\">\r\n\t\t\t    <div className=\"col text-right\">\r\n\t\t\t\t    <Link to=\"/auth/login\" className=\"txt1\">\r\n\t\t\t\t\t    Ya tienes cuenta?\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"container-login100-form-btn m-t-17\">\r\n\t\t\t    <button \r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"login100-form-btn\"\r\n\t\t\t\t\tdisabled={ !todoOk() }\r\n\t\t\t\t>\r\n\t\t\t\t    Crear cuenta\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginPage } from '../pages/LoginPage'\r\nimport { RegisterPage } from '../pages/RegisterPage'\r\n\r\nimport '../css/login-register.css'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"limiter\">\r\n\t\t    <div className=\"container-login100\">\r\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\">\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={ LoginPage }/>\r\n                        <Route exact path=\"/auth/register\" component={ RegisterPage }/>\r\n\r\n                        <Redirect to=\"/auth/login\"/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n                component={ (props) => (\r\n                    (!isAuthenticated)\r\n                        ? <Component {...props}/>\r\n                        : <Redirect to=\"/\"/>\r\n                )}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n                component={ (props) => (\r\n                    (isAuthenticated)\r\n                        ? <Component {...props}/>\r\n                        : <Redirect to=\"/auth\"/>\r\n                )}\r\n        />\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\"\r\n\r\nimport { ChatPage } from '../pages/ChatPage'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { PrivateRoute } from './PrivateRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { auth, verificaToken } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        verificaToken()\r\n    }, [verificaToken])\r\n\r\n    if( auth.checking ){\r\n        return <h1>Espere por favor...</h1>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={ auth.logged } path=\"/auth\" component={ AuthRouter }/>\r\n                    <PrivateRoute isAuthenticated={ auth.logged } exact path=\"/\" component={ ChatPage }/>\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AuthProvider } from './auth/AuthContext'\r\nimport { ChatProvider } from './context/chat/ChatContext'\r\nimport { SocketProvider } from './context/SocketContext'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nmoment.locale('es')\r\n\r\nexport const ChatApp = () => {\r\n    return (\r\n        <ChatProvider>\r\n            <AuthProvider>\r\n                <SocketProvider>\r\n                    <AppRouter/>\r\n                </SocketProvider>\r\n            </AuthProvider>\r\n        </ChatProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\nReactDOM.render(\n    <ChatApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}